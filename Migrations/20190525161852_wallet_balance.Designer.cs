// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dm.TanTipBot.Data;

namespace dm.TanTipBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190525161852_wallet_balance")]
    partial class wallet_balance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dm.TanTipBot.Models.Deposit", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Hash")
                        .IsRequired();

                    b.Property<string>("Memo");

                    b.Property<int>("Version");

                    b.Property<int>("WalletId");

                    b.HasKey("DepositId");

                    b.HasAlternateKey("Hash")
                        .HasName("AlternateKey_Deposit_Hash");

                    b.HasIndex("WalletId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("dm.TanTipBot.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscordId")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("DiscordName");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("dm.TanTipBot.Models.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Balance");

                    b.Property<string>("Identifier");

                    b.Property<string>("Password");

                    b.Property<string>("PublicKey");

                    b.Property<string>("SecretKey");

                    b.Property<int>("UserId");

                    b.Property<int>("WalletType");

                    b.HasKey("WalletId");

                    b.HasAlternateKey("Address")
                        .HasName("AlternateKey_Account_Address");

                    b.HasIndex("UserId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("dm.TanTipBot.Models.Withdraw", b =>
                {
                    b.Property<int>("WithdrawId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Destination");

                    b.Property<string>("Hash")
                        .IsRequired();

                    b.Property<string>("Memo");

                    b.Property<int>("Version");

                    b.Property<int>("WalletId");

                    b.HasKey("WithdrawId");

                    b.HasAlternateKey("Hash")
                        .HasName("AlternateKey_Withdraw_Hash");

                    b.HasIndex("WalletId");

                    b.ToTable("Withdraws");
                });

            modelBuilder.Entity("dm.TanTipBot.Models.Deposit", b =>
                {
                    b.HasOne("dm.TanTipBot.Models.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("dm.TanTipBot.Models.Wallet", b =>
                {
                    b.HasOne("dm.TanTipBot.Models.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("dm.TanTipBot.Models.Withdraw", b =>
                {
                    b.HasOne("dm.TanTipBot.Models.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
